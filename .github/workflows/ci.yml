name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ai_shell/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings for existing code
        flake8 ai_shell/ tests/ --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        # Show formatting differences but don't fail on existing code
        black --check --diff ai_shell/ tests/ || echo "Code formatting issues found but not failing CI"

    - name: Test with pytest
      run: |
        python -m pytest tests/ -v --cov=ai_shell --cov-report=xml

    - name: Test package installation
      run: |
        pip install -e .
        ai-shell --help || echo "Help command completed"

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8

    - name: Run comprehensive linting
      run: |
        # Check for syntax errors and undefined names (these should fail)
        flake8 ai_shell/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Full linting with reasonable limits (but don't fail for existing issues)
        flake8 ai_shell/ tests/ --count --exit-zero --max-complexity=20 --max-line-length=127 --statistics

    - name: Check black formatting
      run: |
        # Show formatting differences but don't fail on existing code
        black --check ai_shell/ tests/ || echo "Code formatting issues found but not failing CI"